type hal_gnss_default, domain;
hal_server_domain(hal_gnss_default, hal_gnss)

/*
typeattribute hal_gnss_default halserverdomain;
typeattribute hal_gnss_default hal_gnss_server;
typeattribute hal_gnss_default hal_gnss;
*/





type hal_gnss_default_exec, exec_type, vendor_file_type, file_type;
init_daemon_domain(hal_gnss_default)



#####################################
# init_daemon_domain(domain)
# Set up a transition from init to the daemon domain
# upon executing its binary.
define(`init_daemon_domain', `
domain_auto_trans(init, $1_exec, $1)   //domain_auto_trans(init,hal_gnss_default_exec,hal_gnss_default)
tmpfs_domain($1)
')



#####################################
# domain_auto_trans(olddomain, type, newdomain)
# Automatically transition from olddomain to newdomain
# upon executing a file labeled with type.
#
define(`domain_auto_trans', `
# Allow the necessary permissions.
domain_trans($1,$2,$3)
# Make the transition occur by default.		//当一个domain为init的进程创建一个子进程执行一个type为zygote_exec的文件时，将该子进程的domain设置为zygote，而不是继承父进程的domain。
type_transition $1 $2:process $3;					//type_transition    init      hal_gnss_default_exec:process       hal_gnss_default
')


#####################################
# domain_trans(olddomain, type, newdomain)
# Allow a transition from olddomain to newdomain
# upon executing a file labeled with type.
# This only allows the transition; it does not
# cause it to occur automatically - use domain_auto_trans
# if that is what you want.
#
define(`domain_trans', `
# Old domain may exec the file and transition to the new domain.
allow $1 $2:file { getattr open read execute map };											//allow init $hal_gnss_default_exec:file { getattr open read execute map };
allow $1 $3:process transition;																			//allow init hal_gnss_default:process transition;				//允许domain为init的进程将domain修改为zygote
# New domain is entered by executing the file.						//allow语句允许type为zygote_exec的可执行文件作为进入zygote这个domain的入口点(entrypoint)
allow $3 $2:file { entrypoint open read execute getattr map };						//allow hal_gnss_default hal_gnss_default_exec:file { entrypoint open read execute getattr map };	
# New domain can send SIGCHLD to its caller.
ifelse($1, `init', `', `allow $3 $1:process sigchld;')											//如果第一个参数为init,则执行	allow hal_gnss_default   init:process 			sigchld
# Enable AT_SECURE, i.e. libc secure mode.
dontaudit $1 $3:process noatsecure;																//dontaudit 			init 				hal_gnss_default:process 					noatsecure;
# XXX dontaudit candidate but requires further study.
allow $1 $3:process { siginh rlimitinh };															//allow init    		 hal_gnss_default:process				 { siginh rlimitinh };
')	










# Read access to system files for HALs in
# /{system,vendor,odm}/lib[64]/hw/ in order
# to be able to open the hal implementation .so files
r_dir_file(hal_gnss, system_file)







###############################################################################################################


system/sepolicy/prebuilts/api/26.0/private/file_contexts:167:/dev/vndbinder		u:object_r:vndbinder_device:s0

#####################################
# vndbinder_use(domain)
# Allow domain to use Binder IPC.
define(`vndbinder_use', `
# Talk to the vndbinder device node
allow $1 vndbinder_device:chr_file rw_file_perms;
# Call the vndservicemanager and transfer references to it.
allow $1 vndservicemanager:binder { call transfer };
# vndservicemanager performs getpidcon on clients.
allow vndservicemanager $1:dir search;
allow vndservicemanager $1:file { read open };
allow vndservicemanager $1:process getattr;
')

