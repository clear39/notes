
https://blog.csdn.net/xiezhi123456/article/details/80596294


//  @   vendor/nxp-opensource/imx/usb


//  @   vendor/nxp-opensource/imx/usb/Android.bp
cc_binary {
    name: "android.hardware.usb@1.1-service.imx",
    relative_install_path: "hw",
    init_rc: ["android.hardware.usb@1.1-service.imx.rc"],
    srcs: ["service.cpp", "Usb.cpp", "UsbGadget.cpp"],
    shared_libs: [
        "libbase",
        "libhidlbase",
        "libhidltransport",
        "liblog",
        "libutils",
        "libhardware",
        "android.hardware.usb@1.0",
        "android.hardware.usb@1.1",
        "android.hardware.usb.gadget@1.0",
        "libcutils",
    ],
    proprietary: true,
}



//  @   vendor/nxp-opensource/imx/usb/service.cpp
int main() {
  android::sp<IUsb> service = new Usb();
  android::sp<IUsbGadget> service2 = new UsbGadget();

  configureRpcThreadpool(2, true /*callerWillJoin*/);
  status_t status = service->registerAsService();

  if (status != OK) {
    ALOGE("Cannot register USB HAL service");
    return 1;
  }

  status = service2->registerAsService();

  if (status != OK) {
    ALOGE("Cannot register USB Gadget HAL service");
    return 1;
  }

  ALOGI("USB HAL Ready.");
  joinRpcThreadpool();
  // Under noraml cases, execution will not reach this line.
  ALOGI("USB HAL failed to join thread pool.");
  return 1;
}
